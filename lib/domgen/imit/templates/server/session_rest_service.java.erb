/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_session_rest_service_name) %>;

@javax.ws.rs.Path( replicant.shared.SharedConstants.CONNECTION_URL_FRAGMENT )
@javax.ws.rs.Produces( javax.ws.rs.core.MediaType.APPLICATION_JSON )
@javax.enterprise.context.ApplicationScoped
@javax.transaction.Transactional
public class <%= repository.imit.session_rest_service_name %>
  extends replicant.server.ee.rest.Abstract<%= repository.imit.secured? ? 'Secured' : '' %>SessionRestService
{
  @javax.inject.Inject
  private replicant.server.transport.ReplicantSessionManager _sessionManager;
<% if repository.imit.secured? -%>
  private boolean _disableSessionServiceProtection;

  @java.lang.Override
  protected boolean disableSecurity()
  {
    return _disableSessionServiceProtection;
  }
<% end -%>

  @javax.annotation.Nonnull
  @java.lang.Override
  protected replicant.server.transport.ReplicantSessionManager getSessionManager()
  {
    return _sessionManager;
  }

  @java.lang.SuppressWarnings( "BanJNDI" )
  @java.lang.Override
  @javax.annotation.PostConstruct
  public void postConstruct()
  {
    super.postConstruct();
<% if repository.imit.secured? -%>
    try
    {
      _disableSessionServiceProtection = new javax.naming.InitialContext().lookup( "<%= Reality::Naming.underscore(repository.name) -%>/env/disable_session_service_protection" ).equals( Boolean.TRUE );
    }
    catch ( final java.lang.Exception ignored )
    {
      //Ignored.
    }
<% end -%>
  }
}
