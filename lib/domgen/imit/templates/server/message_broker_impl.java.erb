/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_message_broker_impl_name) %>;

@javax.enterprise.context.ApplicationScoped
@javax.transaction.Transactional( javax.transaction.Transactional.TxType.NOT_SUPPORTED )
@javax.enterprise.inject.Typed( replicant.server.transport.ReplicantMessageBroker.class )
public class <%= repository.imit.message_broker_impl_name %>
  extends replicant.server.transport.ReplicantMessageBrokerImpl
{
  @javax.inject.Inject
  private replicant.server.transport.ReplicantSessionManager _sessionManager;
  @javax.annotation.Resource( lookup = "java:comp/DefaultManagedScheduledExecutorService" )
  private javax.enterprise.concurrent.ManagedScheduledExecutorService _executor;
  private java.util.concurrent.ScheduledFuture<?> _future;

  @javax.annotation.PostConstruct
  public void postConstruct()
  {
    _future = _executor.scheduleAtFixedRate( this::processPendingSessions, 3, 20, java.util.concurrent.TimeUnit.MILLISECONDS );
  }

  @javax.annotation.PreDestroy
  public void preDestroy()
  {
    if ( null != _future )
    {
      _future.cancel( true );
    }
  }

  @javax.annotation.Nonnull
  @java.lang.Override
  protected replicant.server.transport.ReplicantSessionManager getReplicantSessionManager()
  {
    return _sessionManager;
  }
}
