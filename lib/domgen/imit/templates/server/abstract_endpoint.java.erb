/* DO NOT EDIT: File is auto-generated */
package <%= to_package(repository.imit.qualified_abstract_endpoint_name) %>;

/**
 * Base class that should be extended with code that looks like:
 * <pre><code>
 * {@literal @}ServerEndpoint( <%= repository.jaxrs.constants_name %>.APPLICATION_PATH + SharedConstants.REPLICANT_URL_FRAGMENT )
 * {@literal @}ApplicationScoped
 * {@literal @}Transactional
 * public class <%= repository.imit.endpoint_name %>
 *   extends <%= repository.imit.abstract_endpoint_name %>
 * {
 * }
 * </code></pre>
 */
public abstract class <%= repository.imit.abstract_endpoint_name %>
  extends replicant.server.ee.AbstractEeReplicantEndpoint
{
<% if repository.imit.secured? -%>
  @javax.annotation.Nonnull
  private final org.keycloak.adapters.KeycloakConfigResolver _resolver = new <%= repository.imit.keycloak_client.qualified_keycloak_config_resolver_name %>();
<% end -%>
  @javax.persistence.PersistenceContext( unitName = <%= repository.jpa.qualified_unit_descriptor_name %>.NAME )
  private javax.persistence.EntityManager _em;

  @javax.annotation.Nonnull
  @java.lang.Override
  protected javax.persistence.EntityManager getEntityManager()
  {
    return _em;
  }
<% if repository.imit.secured? -%>

  @Override
  protected boolean isAuthorized( @javax.annotation.Nonnull final replicant.server.transport.ReplicantSession replicantSession )
  {
    return null != toAccessToken( replicantSession );
  }

  @javax.annotation.Nullable
  protected org.keycloak.representations.AccessToken toAccessToken( @javax.annotation.Nonnull final replicant.server.transport.ReplicantSession replicantSession )
  {
    final var authToken = replicantSession.getAuthToken();
    if ( null == authToken )
    {
      return null;
    }
    else
    {
      try
      {
        return org.keycloak.adapters.rotation.AdapterTokenVerifier.verifyToken( authToken, _resolver.resolve( null ) );
      }
      catch ( final org.keycloak.common.VerificationException ve )
      {
        return null;
      }
    }
  }
<% end -%>
}
